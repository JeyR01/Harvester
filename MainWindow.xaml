<Window x:Class="Harvester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Harvester"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        Title="Harvester" Height="450" Width="1500">

    <Window.Resources>
        <local:LockToBrushConverter x:Key="LockToBrushConverter" />
        <local:LockToTextConverter x:Key="LockToTextConverter" />
        <local:CountToBrushConverter x:Key="CountToBrushConverter" />
        <local:CountToTextConverter x:Key="CountToTextConverter" />

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="8*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Grid.Row="0" Width="1000" VerticalAlignment="Center" HorizontalAlignment="Center">
            <TextBlock Width="200">Paste text here:</TextBlock>
            <TextBox  Width="200" Tag="Paste text here"  x:Name="copyfield" CommandManager.Executed="Copyfield_Executed" KeyUp="Copyfield_KeyUp"/>

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock>Here you can filter by Type:</TextBlock>
                <ComboBox Margin="30 0 0 0" SelectionChanged="ComboBox_SelectionChanged"  Width="100">
                    <ComboBoxItem Content="All"/>
                    <ComboBoxItem Content="Augment"/>
                    <ComboBoxItem Content="Remove"/>
                    <ComboBoxItem Content="Remove/Augment"/>
                    <ComboBoxItem Content="Remove NON- /Augment"/>
                    <ComboBoxItem Content="Reroll"/>
                    <ComboBoxItem Content="Reforge"/>
                    <ComboBoxItem Content="Enchant"/>
                    <ComboBoxItem Content="Change"/>
                    <ComboBoxItem Content="Add Influence"/>
                    <ComboBoxItem Content="Synthesise"/>
                    <ComboBoxItem Content="Fracture"/>
                    <ComboBoxItem Content="Special"/>
                </ComboBox>
            </StackPanel>
        </StackPanel>


        <DataGrid ItemsSource="{Binding Harvests,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Grid.Row="1" x:Name="datagrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False">
            <!--<DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#2f4899"/>
            </DataGrid.Resources>-->
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Hidden}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="60" Content="{Binding Lock, Converter={StaticResource LockToTextConverter}}" Click="LockRow_click" Background="{Binding Lock, Converter={StaticResource LockToBrushConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Name" Binding="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTemplateColumn Header="Count">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Count,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TextBox_PreviewTextInput" >
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Count}" Value="0">
                                                <Setter Property="Background" Value="#f77777"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Count}" Value="1">
                                                <Setter Property="Background" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Type" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Type,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Count}" Value="0">
                                                <Setter Property="Background" Value="#f77777"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Count}" Value="1">
                                                <Setter Property="Background" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Price" Binding="{Binding Price,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Comment" Binding="{Binding Comment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

                <DataGridTemplateColumn Header="#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="100" Content="{Binding Count, Converter={StaticResource CountToTextConverter}}" Click="Row_clicked" Background="{Binding Count, Converter={StaticResource CountToBrushConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="50" Content="+1!" Background="Gold" Click="Row_clicked_plus"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="70" Content="Copy row" Background="Magenta" Click="CopyRow"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="#">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="70" Content="Delete Row" Background="Red" Click="DeleteRow"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>




        <StackPanel Grid.Row="2" HorizontalAlignment="Center" Orientation="Horizontal" Width="1000">
            <Button  Width="120" Height="20" Click="CopyClipboard" Margin=" 0 0 30 0 ">Copy All to Clipboard</Button>
            <Button  Width="140" Height="20" Click="CopyCurrent" Margin=" 0 0 30 0 ">Copy current to clipboard</Button>
            <Button  Width="80" Height="20" Click="Button_Click" Margin=" 0 0 40 0">Reset</Button>
            <Button  Width="80" Height="20" Click="Save_button">Save</Button>
            <Button  Width="150" Margin="200 0 0 0" Height="20" Click="OpenUserControl">Read from POE Stash</Button>
        </StackPanel>
    </Grid>
</Window>
